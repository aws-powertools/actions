export function findIssueHandler({ data }: z.infer<import("zod").ZodObject<{
    items: import("zod").ZodUnion<[import("zod").ZodArray<import("zod").ZodObject<{
        url: import("zod").ZodString;
        repository_url: import("zod").ZodString;
        labels_url: import("zod").ZodString;
        comments_url: import("zod").ZodString;
        events_url: import("zod").ZodString;
        html_url: import("zod").ZodString;
        id: import("zod").ZodNumber;
        node_id: import("zod").ZodString;
        number: import("zod").ZodNumber;
        title: import("zod").ZodString;
        user: import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            email: import("zod").ZodOptional<import("zod").ZodString>;
            login: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            avatar_url: import("zod").ZodString;
            gravatar_id: import("zod").ZodString;
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            followers_url: import("zod").ZodString;
            following_url: import("zod").ZodString;
            gists_url: import("zod").ZodString;
            starred_url: import("zod").ZodString;
            subscriptions_url: import("zod").ZodString;
            organizations_url: import("zod").ZodString;
            repos_url: import("zod").ZodString;
            events_url: import("zod").ZodString;
            received_events_url: import("zod").ZodString;
            type: import("zod").ZodEnum<["Bot", "User"]>;
            site_admin: import("zod").ZodBoolean;
            starred_at: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }>;
        labels: import("zod").ZodArray<import("zod").ZodObject<{
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            url: import("zod").ZodString;
            name: import("zod").ZodString;
            color: import("zod").ZodString;
            default: import("zod").ZodBoolean;
            description: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }, {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }>, "many">;
        state: import("zod").ZodEnum<["open", "closed"]>;
        locked: import("zod").ZodBoolean;
        assignee: import("zod").ZodNullable<import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            email: import("zod").ZodOptional<import("zod").ZodString>;
            login: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            avatar_url: import("zod").ZodString;
            gravatar_id: import("zod").ZodString;
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            followers_url: import("zod").ZodString;
            following_url: import("zod").ZodString;
            gists_url: import("zod").ZodString;
            starred_url: import("zod").ZodString;
            subscriptions_url: import("zod").ZodString;
            organizations_url: import("zod").ZodString;
            repos_url: import("zod").ZodString;
            events_url: import("zod").ZodString;
            received_events_url: import("zod").ZodString;
            type: import("zod").ZodEnum<["Bot", "User"]>;
            site_admin: import("zod").ZodBoolean;
            starred_at: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }>>;
        assignees: import("zod").ZodArray<import("zod").ZodNullable<import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            email: import("zod").ZodOptional<import("zod").ZodString>;
            login: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            avatar_url: import("zod").ZodString;
            gravatar_id: import("zod").ZodString;
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            followers_url: import("zod").ZodString;
            following_url: import("zod").ZodString;
            gists_url: import("zod").ZodString;
            starred_url: import("zod").ZodString;
            subscriptions_url: import("zod").ZodString;
            organizations_url: import("zod").ZodString;
            repos_url: import("zod").ZodString;
            events_url: import("zod").ZodString;
            received_events_url: import("zod").ZodString;
            type: import("zod").ZodEnum<["Bot", "User"]>;
            site_admin: import("zod").ZodBoolean;
            starred_at: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }>>, "many">;
        milestone: import("zod").ZodOptional<import("zod").ZodObject<{
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            labels_url: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            number: import("zod").ZodNumber;
            state: import("zod").ZodEnum<["open", "closed"]>;
            title: import("zod").ZodString;
            description: import("zod").ZodNullable<import("zod").ZodString>;
            creator: import("zod").ZodObject<{
                name: import("zod").ZodOptional<import("zod").ZodString>;
                email: import("zod").ZodOptional<import("zod").ZodString>;
                login: import("zod").ZodString;
                id: import("zod").ZodNumber;
                node_id: import("zod").ZodString;
                avatar_url: import("zod").ZodString;
                gravatar_id: import("zod").ZodString;
                url: import("zod").ZodString;
                html_url: import("zod").ZodString;
                followers_url: import("zod").ZodString;
                following_url: import("zod").ZodString;
                gists_url: import("zod").ZodString;
                starred_url: import("zod").ZodString;
                subscriptions_url: import("zod").ZodString;
                organizations_url: import("zod").ZodString;
                repos_url: import("zod").ZodString;
                events_url: import("zod").ZodString;
                received_events_url: import("zod").ZodString;
                type: import("zod").ZodEnum<["Bot", "User"]>;
                site_admin: import("zod").ZodBoolean;
                starred_at: import("zod").ZodOptional<import("zod").ZodString>;
            }, "strip", import("zod").ZodTypeAny, {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            }, {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            }>;
            open_issues: import("zod").ZodNumber;
            closed_issues: import("zod").ZodNumber;
            created_at: import("zod").ZodString;
            updated_at: import("zod").ZodOptional<import("zod").ZodString>;
            closed_at: import("zod").ZodOptional<import("zod").ZodString>;
            due_on: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        }, {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        }>>;
        comments: import("zod").ZodNumber;
        created_at: import("zod").ZodString;
        updated_at: import("zod").ZodNullable<import("zod").ZodString>;
        closed_at: import("zod").ZodNullable<import("zod").ZodString>;
        author_association: import("zod").ZodEnum<["COLLABORATOR", "CONTRIBUTOR", "FIRST_TIMER", "FIRST_TIME_CONTRIBUTOR", "MANNEQUIN", "MEMBER", "NONE", "OWNER"]>;
        active_lock_reason: import("zod").ZodNull;
        body: import("zod").ZodOptional<import("zod").ZodString>;
        reactions: import("zod").ZodObject<{
            url: import("zod").ZodString;
            total_count: import("zod").ZodNumber;
            "+1": import("zod").ZodNumber;
            "-1": import("zod").ZodNumber;
            laugh: import("zod").ZodNumber;
            hooray: import("zod").ZodNumber;
            confused: import("zod").ZodNumber;
            heart: import("zod").ZodNumber;
            rocket: import("zod").ZodNumber;
            eyes: import("zod").ZodNumber;
        }, "strip", import("zod").ZodTypeAny, {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        }, {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        }>;
        timeline_url: import("zod").ZodString;
        performed_via_github_app: import("zod").ZodNullable<import("zod").ZodObject<{
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            slug: import("zod").ZodOptional<import("zod").ZodString>;
            name: import("zod").ZodString;
            description: import("zod").ZodString;
            external_url: import("zod").ZodString;
            html_url: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        }, {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        }>>;
        state_reason: import("zod").ZodOptional<import("zod").ZodEnum<["completed", "reopened", "not_planned", any]>>;
    }, "strip", import("zod").ZodTypeAny, {
        number?: number;
        comments?: number;
        id?: number;
        node_id?: string;
        url?: string;
        html_url?: string;
        events_url?: string;
        labels_url?: string;
        state?: "open" | "closed";
        title?: string;
        created_at?: string;
        updated_at?: string;
        closed_at?: string;
        repository_url?: string;
        comments_url?: string;
        user?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        labels?: {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }[];
        locked?: boolean;
        assignee?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        assignees?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }[];
        milestone?: {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        };
        author_association?: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
        active_lock_reason?: null;
        body?: string;
        reactions?: {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        };
        timeline_url?: string;
        performed_via_github_app?: {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        };
        state_reason?: any;
    }, {
        number?: number;
        comments?: number;
        id?: number;
        node_id?: string;
        url?: string;
        html_url?: string;
        events_url?: string;
        labels_url?: string;
        state?: "open" | "closed";
        title?: string;
        created_at?: string;
        updated_at?: string;
        closed_at?: string;
        repository_url?: string;
        comments_url?: string;
        user?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        labels?: {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }[];
        locked?: boolean;
        assignee?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        assignees?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }[];
        milestone?: {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        };
        author_association?: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
        active_lock_reason?: null;
        body?: string;
        reactions?: {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        };
        timeline_url?: string;
        performed_via_github_app?: {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        };
        state_reason?: any;
    }>, "many">, import("zod").ZodArray<import("zod").ZodObject<import("zod").objectUtil.extendShape<{
        url: import("zod").ZodString;
        repository_url: import("zod").ZodString;
        labels_url: import("zod").ZodString;
        comments_url: import("zod").ZodString;
        events_url: import("zod").ZodString;
        html_url: import("zod").ZodString;
        id: import("zod").ZodNumber;
        node_id: import("zod").ZodString;
        number: import("zod").ZodNumber;
        title: import("zod").ZodString;
        user: import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            email: import("zod").ZodOptional<import("zod").ZodString>;
            login: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            avatar_url: import("zod").ZodString;
            gravatar_id: import("zod").ZodString;
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            followers_url: import("zod").ZodString;
            following_url: import("zod").ZodString;
            gists_url: import("zod").ZodString;
            starred_url: import("zod").ZodString;
            subscriptions_url: import("zod").ZodString;
            organizations_url: import("zod").ZodString;
            repos_url: import("zod").ZodString;
            events_url: import("zod").ZodString;
            received_events_url: import("zod").ZodString;
            type: import("zod").ZodEnum<["Bot", "User"]>;
            site_admin: import("zod").ZodBoolean;
            starred_at: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }>;
        labels: import("zod").ZodArray<import("zod").ZodObject<{
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            url: import("zod").ZodString;
            name: import("zod").ZodString;
            color: import("zod").ZodString;
            default: import("zod").ZodBoolean;
            description: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }, {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }>, "many">;
        state: import("zod").ZodEnum<["open", "closed"]>;
        locked: import("zod").ZodBoolean;
        assignee: import("zod").ZodNullable<import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            email: import("zod").ZodOptional<import("zod").ZodString>;
            login: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            avatar_url: import("zod").ZodString;
            gravatar_id: import("zod").ZodString;
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            followers_url: import("zod").ZodString;
            following_url: import("zod").ZodString;
            gists_url: import("zod").ZodString;
            starred_url: import("zod").ZodString;
            subscriptions_url: import("zod").ZodString;
            organizations_url: import("zod").ZodString;
            repos_url: import("zod").ZodString;
            events_url: import("zod").ZodString;
            received_events_url: import("zod").ZodString;
            type: import("zod").ZodEnum<["Bot", "User"]>;
            site_admin: import("zod").ZodBoolean;
            starred_at: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }>>;
        assignees: import("zod").ZodArray<import("zod").ZodNullable<import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            email: import("zod").ZodOptional<import("zod").ZodString>;
            login: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            avatar_url: import("zod").ZodString;
            gravatar_id: import("zod").ZodString;
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            followers_url: import("zod").ZodString;
            following_url: import("zod").ZodString;
            gists_url: import("zod").ZodString;
            starred_url: import("zod").ZodString;
            subscriptions_url: import("zod").ZodString;
            organizations_url: import("zod").ZodString;
            repos_url: import("zod").ZodString;
            events_url: import("zod").ZodString;
            received_events_url: import("zod").ZodString;
            type: import("zod").ZodEnum<["Bot", "User"]>;
            site_admin: import("zod").ZodBoolean;
            starred_at: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }>>, "many">;
        milestone: import("zod").ZodOptional<import("zod").ZodObject<{
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            labels_url: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            number: import("zod").ZodNumber;
            state: import("zod").ZodEnum<["open", "closed"]>;
            title: import("zod").ZodString;
            description: import("zod").ZodNullable<import("zod").ZodString>;
            creator: import("zod").ZodObject<{
                name: import("zod").ZodOptional<import("zod").ZodString>;
                email: import("zod").ZodOptional<import("zod").ZodString>;
                login: import("zod").ZodString;
                id: import("zod").ZodNumber;
                node_id: import("zod").ZodString;
                avatar_url: import("zod").ZodString;
                gravatar_id: import("zod").ZodString;
                url: import("zod").ZodString;
                html_url: import("zod").ZodString;
                followers_url: import("zod").ZodString;
                following_url: import("zod").ZodString;
                gists_url: import("zod").ZodString;
                starred_url: import("zod").ZodString;
                subscriptions_url: import("zod").ZodString;
                organizations_url: import("zod").ZodString;
                repos_url: import("zod").ZodString;
                events_url: import("zod").ZodString;
                received_events_url: import("zod").ZodString;
                type: import("zod").ZodEnum<["Bot", "User"]>;
                site_admin: import("zod").ZodBoolean;
                starred_at: import("zod").ZodOptional<import("zod").ZodString>;
            }, "strip", import("zod").ZodTypeAny, {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            }, {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            }>;
            open_issues: import("zod").ZodNumber;
            closed_issues: import("zod").ZodNumber;
            created_at: import("zod").ZodString;
            updated_at: import("zod").ZodOptional<import("zod").ZodString>;
            closed_at: import("zod").ZodOptional<import("zod").ZodString>;
            due_on: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        }, {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        }>>;
        comments: import("zod").ZodNumber;
        created_at: import("zod").ZodString;
        updated_at: import("zod").ZodNullable<import("zod").ZodString>;
        closed_at: import("zod").ZodNullable<import("zod").ZodString>;
        author_association: import("zod").ZodEnum<["COLLABORATOR", "CONTRIBUTOR", "FIRST_TIMER", "FIRST_TIME_CONTRIBUTOR", "MANNEQUIN", "MEMBER", "NONE", "OWNER"]>;
        active_lock_reason: import("zod").ZodNull;
        body: import("zod").ZodOptional<import("zod").ZodString>;
        reactions: import("zod").ZodObject<{
            url: import("zod").ZodString;
            total_count: import("zod").ZodNumber;
            "+1": import("zod").ZodNumber;
            "-1": import("zod").ZodNumber;
            laugh: import("zod").ZodNumber;
            hooray: import("zod").ZodNumber;
            confused: import("zod").ZodNumber;
            heart: import("zod").ZodNumber;
            rocket: import("zod").ZodNumber;
            eyes: import("zod").ZodNumber;
        }, "strip", import("zod").ZodTypeAny, {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        }, {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        }>;
        timeline_url: import("zod").ZodString;
        performed_via_github_app: import("zod").ZodNullable<import("zod").ZodObject<{
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            slug: import("zod").ZodOptional<import("zod").ZodString>;
            name: import("zod").ZodString;
            description: import("zod").ZodString;
            external_url: import("zod").ZodString;
            html_url: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        }, {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        }>>;
        state_reason: import("zod").ZodOptional<import("zod").ZodEnum<["completed", "reopened", "not_planned", any]>>;
    }, {
        pull_request: import("zod").ZodObject<{
            diff_url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            patch_url: import("zod").ZodString;
            url: import("zod").ZodString;
            merged_at: import("zod").ZodNullable<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            url?: string;
            html_url?: string;
            diff_url?: string;
            patch_url?: string;
            merged_at?: string;
        }, {
            url?: string;
            html_url?: string;
            diff_url?: string;
            patch_url?: string;
            merged_at?: string;
        }>;
    }>, "strip", import("zod").ZodTypeAny, {
        number?: number;
        comments?: number;
        id?: number;
        node_id?: string;
        url?: string;
        html_url?: string;
        events_url?: string;
        labels_url?: string;
        state?: "open" | "closed";
        title?: string;
        created_at?: string;
        updated_at?: string;
        closed_at?: string;
        repository_url?: string;
        comments_url?: string;
        user?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        labels?: {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }[];
        locked?: boolean;
        assignee?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        assignees?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }[];
        milestone?: {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        };
        author_association?: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
        active_lock_reason?: null;
        body?: string;
        reactions?: {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        };
        timeline_url?: string;
        performed_via_github_app?: {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        };
        state_reason?: any;
        pull_request?: {
            url?: string;
            html_url?: string;
            diff_url?: string;
            patch_url?: string;
            merged_at?: string;
        };
    }, {
        number?: number;
        comments?: number;
        id?: number;
        node_id?: string;
        url?: string;
        html_url?: string;
        events_url?: string;
        labels_url?: string;
        state?: "open" | "closed";
        title?: string;
        created_at?: string;
        updated_at?: string;
        closed_at?: string;
        repository_url?: string;
        comments_url?: string;
        user?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        labels?: {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }[];
        locked?: boolean;
        assignee?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        assignees?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }[];
        milestone?: {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        };
        author_association?: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
        active_lock_reason?: null;
        body?: string;
        reactions?: {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        };
        timeline_url?: string;
        performed_via_github_app?: {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        };
        state_reason?: any;
        pull_request?: {
            url?: string;
            html_url?: string;
            diff_url?: string;
            patch_url?: string;
            merged_at?: string;
        };
    }>, "many">]>;
    total_count: import("zod").ZodNumber;
    incomplete_results: import("zod").ZodBoolean;
}, "strip", import("zod").ZodTypeAny, {
    total_count?: number;
    items?: {
        number?: number;
        comments?: number;
        id?: number;
        node_id?: string;
        url?: string;
        html_url?: string;
        events_url?: string;
        labels_url?: string;
        state?: "open" | "closed";
        title?: string;
        created_at?: string;
        updated_at?: string;
        closed_at?: string;
        repository_url?: string;
        comments_url?: string;
        user?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        labels?: {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }[];
        locked?: boolean;
        assignee?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        assignees?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }[];
        milestone?: {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        };
        author_association?: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
        active_lock_reason?: null;
        body?: string;
        reactions?: {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        };
        timeline_url?: string;
        performed_via_github_app?: {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        };
        state_reason?: any;
    }[] | {
        number?: number;
        comments?: number;
        id?: number;
        node_id?: string;
        url?: string;
        html_url?: string;
        events_url?: string;
        labels_url?: string;
        state?: "open" | "closed";
        title?: string;
        created_at?: string;
        updated_at?: string;
        closed_at?: string;
        repository_url?: string;
        comments_url?: string;
        user?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        labels?: {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }[];
        locked?: boolean;
        assignee?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        assignees?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }[];
        milestone?: {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        };
        author_association?: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
        active_lock_reason?: null;
        body?: string;
        reactions?: {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        };
        timeline_url?: string;
        performed_via_github_app?: {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        };
        state_reason?: any;
        pull_request?: {
            url?: string;
            html_url?: string;
            diff_url?: string;
            patch_url?: string;
            merged_at?: string;
        };
    }[];
    incomplete_results?: boolean;
}, {
    total_count?: number;
    items?: {
        number?: number;
        comments?: number;
        id?: number;
        node_id?: string;
        url?: string;
        html_url?: string;
        events_url?: string;
        labels_url?: string;
        state?: "open" | "closed";
        title?: string;
        created_at?: string;
        updated_at?: string;
        closed_at?: string;
        repository_url?: string;
        comments_url?: string;
        user?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        labels?: {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }[];
        locked?: boolean;
        assignee?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        assignees?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }[];
        milestone?: {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        };
        author_association?: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
        active_lock_reason?: null;
        body?: string;
        reactions?: {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        };
        timeline_url?: string;
        performed_via_github_app?: {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        };
        state_reason?: any;
    }[] | {
        number?: number;
        comments?: number;
        id?: number;
        node_id?: string;
        url?: string;
        html_url?: string;
        events_url?: string;
        labels_url?: string;
        state?: "open" | "closed";
        title?: string;
        created_at?: string;
        updated_at?: string;
        closed_at?: string;
        repository_url?: string;
        comments_url?: string;
        user?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        labels?: {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }[];
        locked?: boolean;
        assignee?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        assignees?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }[];
        milestone?: {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        };
        author_association?: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
        active_lock_reason?: null;
        body?: string;
        reactions?: {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        };
        timeline_url?: string;
        performed_via_github_app?: {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        };
        state_reason?: any;
        pull_request?: {
            url?: string;
            html_url?: string;
            diff_url?: string;
            patch_url?: string;
            merged_at?: string;
        };
    }[];
    incomplete_results?: boolean;
}>>): import("msw").HttpHandler[];
export function findIssueFailureHandler({ err }: string): import("msw").HttpHandler[];
export function listIssuesHandler({ data, org, repo }: {
    data: z.infer<import("zod").ZodObject<{
        url: import("zod").ZodString;
        repository_url: import("zod").ZodString;
        labels_url: import("zod").ZodString;
        comments_url: import("zod").ZodString;
        events_url: import("zod").ZodString;
        html_url: import("zod").ZodString;
        id: import("zod").ZodNumber;
        node_id: import("zod").ZodString;
        number: import("zod").ZodNumber;
        title: import("zod").ZodString;
        user: import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            email: import("zod").ZodOptional<import("zod").ZodString>;
            login: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            avatar_url: import("zod").ZodString;
            gravatar_id: import("zod").ZodString;
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            followers_url: import("zod").ZodString;
            following_url: import("zod").ZodString;
            gists_url: import("zod").ZodString;
            starred_url: import("zod").ZodString;
            subscriptions_url: import("zod").ZodString;
            organizations_url: import("zod").ZodString;
            repos_url: import("zod").ZodString;
            events_url: import("zod").ZodString;
            received_events_url: import("zod").ZodString;
            type: import("zod").ZodEnum<["Bot", "User"]>;
            site_admin: import("zod").ZodBoolean;
            starred_at: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }>;
        labels: import("zod").ZodArray<import("zod").ZodObject<{
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            url: import("zod").ZodString;
            name: import("zod").ZodString;
            color: import("zod").ZodString;
            default: import("zod").ZodBoolean;
            description: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }, {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }>, "many">;
        state: import("zod").ZodEnum<["open", "closed"]>;
        locked: import("zod").ZodBoolean;
        assignee: import("zod").ZodNullable<import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            email: import("zod").ZodOptional<import("zod").ZodString>;
            login: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            avatar_url: import("zod").ZodString;
            gravatar_id: import("zod").ZodString;
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            followers_url: import("zod").ZodString;
            following_url: import("zod").ZodString;
            gists_url: import("zod").ZodString;
            starred_url: import("zod").ZodString;
            subscriptions_url: import("zod").ZodString;
            organizations_url: import("zod").ZodString;
            repos_url: import("zod").ZodString;
            events_url: import("zod").ZodString;
            received_events_url: import("zod").ZodString;
            type: import("zod").ZodEnum<["Bot", "User"]>;
            site_admin: import("zod").ZodBoolean;
            starred_at: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }>>;
        assignees: import("zod").ZodArray<import("zod").ZodNullable<import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            email: import("zod").ZodOptional<import("zod").ZodString>;
            login: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            avatar_url: import("zod").ZodString;
            gravatar_id: import("zod").ZodString;
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            followers_url: import("zod").ZodString;
            following_url: import("zod").ZodString;
            gists_url: import("zod").ZodString;
            starred_url: import("zod").ZodString;
            subscriptions_url: import("zod").ZodString;
            organizations_url: import("zod").ZodString;
            repos_url: import("zod").ZodString;
            events_url: import("zod").ZodString;
            received_events_url: import("zod").ZodString;
            type: import("zod").ZodEnum<["Bot", "User"]>;
            site_admin: import("zod").ZodBoolean;
            starred_at: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }>>, "many">;
        milestone: import("zod").ZodOptional<import("zod").ZodObject<{
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            labels_url: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            number: import("zod").ZodNumber;
            state: import("zod").ZodEnum<["open", "closed"]>;
            title: import("zod").ZodString;
            description: import("zod").ZodNullable<import("zod").ZodString>;
            creator: import("zod").ZodObject<{
                name: import("zod").ZodOptional<import("zod").ZodString>;
                email: import("zod").ZodOptional<import("zod").ZodString>;
                login: import("zod").ZodString;
                id: import("zod").ZodNumber;
                node_id: import("zod").ZodString;
                avatar_url: import("zod").ZodString;
                gravatar_id: import("zod").ZodString;
                url: import("zod").ZodString;
                html_url: import("zod").ZodString;
                followers_url: import("zod").ZodString;
                following_url: import("zod").ZodString;
                gists_url: import("zod").ZodString;
                starred_url: import("zod").ZodString;
                subscriptions_url: import("zod").ZodString;
                organizations_url: import("zod").ZodString;
                repos_url: import("zod").ZodString;
                events_url: import("zod").ZodString;
                received_events_url: import("zod").ZodString;
                type: import("zod").ZodEnum<["Bot", "User"]>;
                site_admin: import("zod").ZodBoolean;
                starred_at: import("zod").ZodOptional<import("zod").ZodString>;
            }, "strip", import("zod").ZodTypeAny, {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            }, {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            }>;
            open_issues: import("zod").ZodNumber;
            closed_issues: import("zod").ZodNumber;
            created_at: import("zod").ZodString;
            updated_at: import("zod").ZodOptional<import("zod").ZodString>;
            closed_at: import("zod").ZodOptional<import("zod").ZodString>;
            due_on: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        }, {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        }>>;
        comments: import("zod").ZodNumber;
        created_at: import("zod").ZodString;
        updated_at: import("zod").ZodNullable<import("zod").ZodString>;
        closed_at: import("zod").ZodNullable<import("zod").ZodString>;
        author_association: import("zod").ZodEnum<["COLLABORATOR", "CONTRIBUTOR", "FIRST_TIMER", "FIRST_TIME_CONTRIBUTOR", "MANNEQUIN", "MEMBER", "NONE", "OWNER"]>;
        active_lock_reason: import("zod").ZodNull;
        body: import("zod").ZodOptional<import("zod").ZodString>;
        reactions: import("zod").ZodObject<{
            url: import("zod").ZodString;
            total_count: import("zod").ZodNumber;
            "+1": import("zod").ZodNumber;
            "-1": import("zod").ZodNumber;
            laugh: import("zod").ZodNumber;
            hooray: import("zod").ZodNumber;
            confused: import("zod").ZodNumber;
            heart: import("zod").ZodNumber;
            rocket: import("zod").ZodNumber;
            eyes: import("zod").ZodNumber;
        }, "strip", import("zod").ZodTypeAny, {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        }, {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        }>;
        timeline_url: import("zod").ZodString;
        performed_via_github_app: import("zod").ZodNullable<import("zod").ZodObject<{
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            slug: import("zod").ZodOptional<import("zod").ZodString>;
            name: import("zod").ZodString;
            description: import("zod").ZodString;
            external_url: import("zod").ZodString;
            html_url: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        }, {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        }>>;
        state_reason: import("zod").ZodOptional<import("zod").ZodEnum<["completed", "reopened", "not_planned", any]>>;
    }, "strip", import("zod").ZodTypeAny, {
        number?: number;
        comments?: number;
        id?: number;
        node_id?: string;
        url?: string;
        html_url?: string;
        events_url?: string;
        labels_url?: string;
        state?: "open" | "closed";
        title?: string;
        created_at?: string;
        updated_at?: string;
        closed_at?: string;
        repository_url?: string;
        comments_url?: string;
        user?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        labels?: {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }[];
        locked?: boolean;
        assignee?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        assignees?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }[];
        milestone?: {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        };
        author_association?: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
        active_lock_reason?: null;
        body?: string;
        reactions?: {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        };
        timeline_url?: string;
        performed_via_github_app?: {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        };
        state_reason?: any;
    }, {
        number?: number;
        comments?: number;
        id?: number;
        node_id?: string;
        url?: string;
        html_url?: string;
        events_url?: string;
        labels_url?: string;
        state?: "open" | "closed";
        title?: string;
        created_at?: string;
        updated_at?: string;
        closed_at?: string;
        repository_url?: string;
        comments_url?: string;
        user?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        labels?: {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }[];
        locked?: boolean;
        assignee?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        assignees?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }[];
        milestone?: {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        };
        author_association?: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
        active_lock_reason?: null;
        body?: string;
        reactions?: {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        };
        timeline_url?: string;
        performed_via_github_app?: {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        };
        state_reason?: any;
    }>>;
    org: string;
    repo: string;
}): import("msw").HttpHandler[];
export function listIssuesFailureHandler({ org, repo, err }: {
    org: string;
    repo: string;
    err: string;
}): import("msw").HttpHandler[];
export function createIssueHandler({ data, org, repo }: {
    data: z.infer<import("zod").ZodObject<{
        url: import("zod").ZodString;
        repository_url: import("zod").ZodString;
        labels_url: import("zod").ZodString;
        comments_url: import("zod").ZodString;
        events_url: import("zod").ZodString;
        html_url: import("zod").ZodString;
        id: import("zod").ZodNumber;
        node_id: import("zod").ZodString;
        number: import("zod").ZodNumber;
        title: import("zod").ZodString;
        user: import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            email: import("zod").ZodOptional<import("zod").ZodString>;
            login: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            avatar_url: import("zod").ZodString;
            gravatar_id: import("zod").ZodString;
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            followers_url: import("zod").ZodString;
            following_url: import("zod").ZodString;
            gists_url: import("zod").ZodString;
            starred_url: import("zod").ZodString;
            subscriptions_url: import("zod").ZodString;
            organizations_url: import("zod").ZodString;
            repos_url: import("zod").ZodString;
            events_url: import("zod").ZodString;
            received_events_url: import("zod").ZodString;
            type: import("zod").ZodEnum<["Bot", "User"]>;
            site_admin: import("zod").ZodBoolean;
            starred_at: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }>;
        labels: import("zod").ZodArray<import("zod").ZodObject<{
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            url: import("zod").ZodString;
            name: import("zod").ZodString;
            color: import("zod").ZodString;
            default: import("zod").ZodBoolean;
            description: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }, {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }>, "many">;
        state: import("zod").ZodEnum<["open", "closed"]>;
        locked: import("zod").ZodBoolean;
        assignee: import("zod").ZodNullable<import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            email: import("zod").ZodOptional<import("zod").ZodString>;
            login: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            avatar_url: import("zod").ZodString;
            gravatar_id: import("zod").ZodString;
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            followers_url: import("zod").ZodString;
            following_url: import("zod").ZodString;
            gists_url: import("zod").ZodString;
            starred_url: import("zod").ZodString;
            subscriptions_url: import("zod").ZodString;
            organizations_url: import("zod").ZodString;
            repos_url: import("zod").ZodString;
            events_url: import("zod").ZodString;
            received_events_url: import("zod").ZodString;
            type: import("zod").ZodEnum<["Bot", "User"]>;
            site_admin: import("zod").ZodBoolean;
            starred_at: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }>>;
        assignees: import("zod").ZodArray<import("zod").ZodNullable<import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            email: import("zod").ZodOptional<import("zod").ZodString>;
            login: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            avatar_url: import("zod").ZodString;
            gravatar_id: import("zod").ZodString;
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            followers_url: import("zod").ZodString;
            following_url: import("zod").ZodString;
            gists_url: import("zod").ZodString;
            starred_url: import("zod").ZodString;
            subscriptions_url: import("zod").ZodString;
            organizations_url: import("zod").ZodString;
            repos_url: import("zod").ZodString;
            events_url: import("zod").ZodString;
            received_events_url: import("zod").ZodString;
            type: import("zod").ZodEnum<["Bot", "User"]>;
            site_admin: import("zod").ZodBoolean;
            starred_at: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }>>, "many">;
        milestone: import("zod").ZodOptional<import("zod").ZodObject<{
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            labels_url: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            number: import("zod").ZodNumber;
            state: import("zod").ZodEnum<["open", "closed"]>;
            title: import("zod").ZodString;
            description: import("zod").ZodNullable<import("zod").ZodString>;
            creator: import("zod").ZodObject<{
                name: import("zod").ZodOptional<import("zod").ZodString>;
                email: import("zod").ZodOptional<import("zod").ZodString>;
                login: import("zod").ZodString;
                id: import("zod").ZodNumber;
                node_id: import("zod").ZodString;
                avatar_url: import("zod").ZodString;
                gravatar_id: import("zod").ZodString;
                url: import("zod").ZodString;
                html_url: import("zod").ZodString;
                followers_url: import("zod").ZodString;
                following_url: import("zod").ZodString;
                gists_url: import("zod").ZodString;
                starred_url: import("zod").ZodString;
                subscriptions_url: import("zod").ZodString;
                organizations_url: import("zod").ZodString;
                repos_url: import("zod").ZodString;
                events_url: import("zod").ZodString;
                received_events_url: import("zod").ZodString;
                type: import("zod").ZodEnum<["Bot", "User"]>;
                site_admin: import("zod").ZodBoolean;
                starred_at: import("zod").ZodOptional<import("zod").ZodString>;
            }, "strip", import("zod").ZodTypeAny, {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            }, {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            }>;
            open_issues: import("zod").ZodNumber;
            closed_issues: import("zod").ZodNumber;
            created_at: import("zod").ZodString;
            updated_at: import("zod").ZodOptional<import("zod").ZodString>;
            closed_at: import("zod").ZodOptional<import("zod").ZodString>;
            due_on: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        }, {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        }>>;
        comments: import("zod").ZodNumber;
        created_at: import("zod").ZodString;
        updated_at: import("zod").ZodNullable<import("zod").ZodString>;
        closed_at: import("zod").ZodNullable<import("zod").ZodString>;
        author_association: import("zod").ZodEnum<["COLLABORATOR", "CONTRIBUTOR", "FIRST_TIMER", "FIRST_TIME_CONTRIBUTOR", "MANNEQUIN", "MEMBER", "NONE", "OWNER"]>;
        active_lock_reason: import("zod").ZodNull;
        body: import("zod").ZodOptional<import("zod").ZodString>;
        reactions: import("zod").ZodObject<{
            url: import("zod").ZodString;
            total_count: import("zod").ZodNumber;
            "+1": import("zod").ZodNumber;
            "-1": import("zod").ZodNumber;
            laugh: import("zod").ZodNumber;
            hooray: import("zod").ZodNumber;
            confused: import("zod").ZodNumber;
            heart: import("zod").ZodNumber;
            rocket: import("zod").ZodNumber;
            eyes: import("zod").ZodNumber;
        }, "strip", import("zod").ZodTypeAny, {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        }, {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        }>;
        timeline_url: import("zod").ZodString;
        performed_via_github_app: import("zod").ZodNullable<import("zod").ZodObject<{
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            slug: import("zod").ZodOptional<import("zod").ZodString>;
            name: import("zod").ZodString;
            description: import("zod").ZodString;
            external_url: import("zod").ZodString;
            html_url: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        }, {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        }>>;
        state_reason: import("zod").ZodOptional<import("zod").ZodEnum<["completed", "reopened", "not_planned", any]>>;
    }, "strip", import("zod").ZodTypeAny, {
        number?: number;
        comments?: number;
        id?: number;
        node_id?: string;
        url?: string;
        html_url?: string;
        events_url?: string;
        labels_url?: string;
        state?: "open" | "closed";
        title?: string;
        created_at?: string;
        updated_at?: string;
        closed_at?: string;
        repository_url?: string;
        comments_url?: string;
        user?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        labels?: {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }[];
        locked?: boolean;
        assignee?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        assignees?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }[];
        milestone?: {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        };
        author_association?: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
        active_lock_reason?: null;
        body?: string;
        reactions?: {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        };
        timeline_url?: string;
        performed_via_github_app?: {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        };
        state_reason?: any;
    }, {
        number?: number;
        comments?: number;
        id?: number;
        node_id?: string;
        url?: string;
        html_url?: string;
        events_url?: string;
        labels_url?: string;
        state?: "open" | "closed";
        title?: string;
        created_at?: string;
        updated_at?: string;
        closed_at?: string;
        repository_url?: string;
        comments_url?: string;
        user?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        labels?: {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }[];
        locked?: boolean;
        assignee?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        assignees?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }[];
        milestone?: {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        };
        author_association?: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
        active_lock_reason?: null;
        body?: string;
        reactions?: {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        };
        timeline_url?: string;
        performed_via_github_app?: {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        };
        state_reason?: any;
    }>>;
    org: string;
    repo: string;
}): import("msw").HttpHandler[];
export function createIssueFailureHandler({ org, repo, err }: {
    org: string;
    repo: string;
    err: string;
}): import("msw").HttpHandler[];
export function updateIssueHandler({ data, issueNumber, org, repo }: {
    data: z.infer<import("zod").ZodObject<{
        url: import("zod").ZodString;
        repository_url: import("zod").ZodString;
        labels_url: import("zod").ZodString;
        comments_url: import("zod").ZodString;
        events_url: import("zod").ZodString;
        html_url: import("zod").ZodString;
        id: import("zod").ZodNumber;
        node_id: import("zod").ZodString;
        number: import("zod").ZodNumber;
        title: import("zod").ZodString;
        user: import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            email: import("zod").ZodOptional<import("zod").ZodString>;
            login: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            avatar_url: import("zod").ZodString;
            gravatar_id: import("zod").ZodString;
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            followers_url: import("zod").ZodString;
            following_url: import("zod").ZodString;
            gists_url: import("zod").ZodString;
            starred_url: import("zod").ZodString;
            subscriptions_url: import("zod").ZodString;
            organizations_url: import("zod").ZodString;
            repos_url: import("zod").ZodString;
            events_url: import("zod").ZodString;
            received_events_url: import("zod").ZodString;
            type: import("zod").ZodEnum<["Bot", "User"]>;
            site_admin: import("zod").ZodBoolean;
            starred_at: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }>;
        labels: import("zod").ZodArray<import("zod").ZodObject<{
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            url: import("zod").ZodString;
            name: import("zod").ZodString;
            color: import("zod").ZodString;
            default: import("zod").ZodBoolean;
            description: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }, {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }>, "many">;
        state: import("zod").ZodEnum<["open", "closed"]>;
        locked: import("zod").ZodBoolean;
        assignee: import("zod").ZodNullable<import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            email: import("zod").ZodOptional<import("zod").ZodString>;
            login: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            avatar_url: import("zod").ZodString;
            gravatar_id: import("zod").ZodString;
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            followers_url: import("zod").ZodString;
            following_url: import("zod").ZodString;
            gists_url: import("zod").ZodString;
            starred_url: import("zod").ZodString;
            subscriptions_url: import("zod").ZodString;
            organizations_url: import("zod").ZodString;
            repos_url: import("zod").ZodString;
            events_url: import("zod").ZodString;
            received_events_url: import("zod").ZodString;
            type: import("zod").ZodEnum<["Bot", "User"]>;
            site_admin: import("zod").ZodBoolean;
            starred_at: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }>>;
        assignees: import("zod").ZodArray<import("zod").ZodNullable<import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            email: import("zod").ZodOptional<import("zod").ZodString>;
            login: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            avatar_url: import("zod").ZodString;
            gravatar_id: import("zod").ZodString;
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            followers_url: import("zod").ZodString;
            following_url: import("zod").ZodString;
            gists_url: import("zod").ZodString;
            starred_url: import("zod").ZodString;
            subscriptions_url: import("zod").ZodString;
            organizations_url: import("zod").ZodString;
            repos_url: import("zod").ZodString;
            events_url: import("zod").ZodString;
            received_events_url: import("zod").ZodString;
            type: import("zod").ZodEnum<["Bot", "User"]>;
            site_admin: import("zod").ZodBoolean;
            starred_at: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }, {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }>>, "many">;
        milestone: import("zod").ZodOptional<import("zod").ZodObject<{
            url: import("zod").ZodString;
            html_url: import("zod").ZodString;
            labels_url: import("zod").ZodString;
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            number: import("zod").ZodNumber;
            state: import("zod").ZodEnum<["open", "closed"]>;
            title: import("zod").ZodString;
            description: import("zod").ZodNullable<import("zod").ZodString>;
            creator: import("zod").ZodObject<{
                name: import("zod").ZodOptional<import("zod").ZodString>;
                email: import("zod").ZodOptional<import("zod").ZodString>;
                login: import("zod").ZodString;
                id: import("zod").ZodNumber;
                node_id: import("zod").ZodString;
                avatar_url: import("zod").ZodString;
                gravatar_id: import("zod").ZodString;
                url: import("zod").ZodString;
                html_url: import("zod").ZodString;
                followers_url: import("zod").ZodString;
                following_url: import("zod").ZodString;
                gists_url: import("zod").ZodString;
                starred_url: import("zod").ZodString;
                subscriptions_url: import("zod").ZodString;
                organizations_url: import("zod").ZodString;
                repos_url: import("zod").ZodString;
                events_url: import("zod").ZodString;
                received_events_url: import("zod").ZodString;
                type: import("zod").ZodEnum<["Bot", "User"]>;
                site_admin: import("zod").ZodBoolean;
                starred_at: import("zod").ZodOptional<import("zod").ZodString>;
            }, "strip", import("zod").ZodTypeAny, {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            }, {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            }>;
            open_issues: import("zod").ZodNumber;
            closed_issues: import("zod").ZodNumber;
            created_at: import("zod").ZodString;
            updated_at: import("zod").ZodOptional<import("zod").ZodString>;
            closed_at: import("zod").ZodOptional<import("zod").ZodString>;
            due_on: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        }, {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        }>>;
        comments: import("zod").ZodNumber;
        created_at: import("zod").ZodString;
        updated_at: import("zod").ZodNullable<import("zod").ZodString>;
        closed_at: import("zod").ZodNullable<import("zod").ZodString>;
        author_association: import("zod").ZodEnum<["COLLABORATOR", "CONTRIBUTOR", "FIRST_TIMER", "FIRST_TIME_CONTRIBUTOR", "MANNEQUIN", "MEMBER", "NONE", "OWNER"]>;
        active_lock_reason: import("zod").ZodNull;
        body: import("zod").ZodOptional<import("zod").ZodString>;
        reactions: import("zod").ZodObject<{
            url: import("zod").ZodString;
            total_count: import("zod").ZodNumber;
            "+1": import("zod").ZodNumber;
            "-1": import("zod").ZodNumber;
            laugh: import("zod").ZodNumber;
            hooray: import("zod").ZodNumber;
            confused: import("zod").ZodNumber;
            heart: import("zod").ZodNumber;
            rocket: import("zod").ZodNumber;
            eyes: import("zod").ZodNumber;
        }, "strip", import("zod").ZodTypeAny, {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        }, {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        }>;
        timeline_url: import("zod").ZodString;
        performed_via_github_app: import("zod").ZodNullable<import("zod").ZodObject<{
            id: import("zod").ZodNumber;
            node_id: import("zod").ZodString;
            slug: import("zod").ZodOptional<import("zod").ZodString>;
            name: import("zod").ZodString;
            description: import("zod").ZodString;
            external_url: import("zod").ZodString;
            html_url: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        }, {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        }>>;
        state_reason: import("zod").ZodOptional<import("zod").ZodEnum<["completed", "reopened", "not_planned", any]>>;
    }, "strip", import("zod").ZodTypeAny, {
        number?: number;
        comments?: number;
        id?: number;
        node_id?: string;
        url?: string;
        html_url?: string;
        events_url?: string;
        labels_url?: string;
        state?: "open" | "closed";
        title?: string;
        created_at?: string;
        updated_at?: string;
        closed_at?: string;
        repository_url?: string;
        comments_url?: string;
        user?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        labels?: {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }[];
        locked?: boolean;
        assignee?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        assignees?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }[];
        milestone?: {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        };
        author_association?: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
        active_lock_reason?: null;
        body?: string;
        reactions?: {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        };
        timeline_url?: string;
        performed_via_github_app?: {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        };
        state_reason?: any;
    }, {
        number?: number;
        comments?: number;
        id?: number;
        node_id?: string;
        url?: string;
        html_url?: string;
        events_url?: string;
        labels_url?: string;
        state?: "open" | "closed";
        title?: string;
        created_at?: string;
        updated_at?: string;
        closed_at?: string;
        repository_url?: string;
        comments_url?: string;
        user?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        labels?: {
            name?: string;
            id?: number;
            node_id?: string;
            url?: string;
            color?: string;
            default?: boolean;
            description?: string;
        }[];
        locked?: boolean;
        assignee?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        };
        assignees?: {
            name?: string;
            email?: string;
            login?: string;
            id?: number;
            node_id?: string;
            avatar_url?: string;
            gravatar_id?: string;
            url?: string;
            html_url?: string;
            followers_url?: string;
            following_url?: string;
            gists_url?: string;
            starred_url?: string;
            subscriptions_url?: string;
            organizations_url?: string;
            repos_url?: string;
            events_url?: string;
            received_events_url?: string;
            type?: "Bot" | "User";
            site_admin?: boolean;
            starred_at?: string;
        }[];
        milestone?: {
            number?: number;
            id?: number;
            node_id?: string;
            url?: string;
            html_url?: string;
            description?: string;
            labels_url?: string;
            state?: "open" | "closed";
            title?: string;
            creator?: {
                name?: string;
                email?: string;
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: "Bot" | "User";
                site_admin?: boolean;
                starred_at?: string;
            };
            open_issues?: number;
            closed_issues?: number;
            created_at?: string;
            updated_at?: string;
            closed_at?: string;
            due_on?: string;
        };
        author_association?: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";
        active_lock_reason?: null;
        body?: string;
        reactions?: {
            url?: string;
            total_count?: number;
            "+1"?: number;
            "-1"?: number;
            laugh?: number;
            hooray?: number;
            confused?: number;
            heart?: number;
            rocket?: number;
            eyes?: number;
        };
        timeline_url?: string;
        performed_via_github_app?: {
            name?: string;
            id?: number;
            node_id?: string;
            html_url?: string;
            description?: string;
            slug?: string;
            external_url?: string;
        };
        state_reason?: any;
    }>>;
    issueNumber: number;
    org: string;
    repo: string;
}): import("msw").HttpHandler[];
export function updateIssueFailureHandler({ issueNumber, org, repo, err }: {
    issueNumber: number;
    org: string;
    repo: string;
    err: string;
}): import("msw").HttpHandler[];
//# sourceMappingURL=issues_handler.d.mts.map