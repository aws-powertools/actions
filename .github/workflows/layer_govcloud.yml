on:
  workflow_dispatch:
    inputs:
      environment:
        description: Deployment environment
        type: choice
        options:
          - Gamma
          - Prod
        default: Gamma
        required: true
      version:
        description: Layer version to duplicate
        type: number
        required: true

name: Layer Deployment (GovCloud)
run-name: Layer Deployment (GovCloud) - ${{ inputs.environment }}

jobs:
  stash:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        layer:
          - AWSLambdaPowertoolsPythonV3-python38
          - AWSLambdaPowertoolsPythonV3-python39
          - AWSLambdaPowertoolsPythonV3-python310
          - AWSLambdaPowertoolsPythonV3-python311
          - AWSLambdaPowertoolsPythonV3-python312
        arch:
          - arm64
          - x86
    environment: Prod (Readonly)
    outputs:
      east_env: ${{ steps.generate_envs.outputs.east_env }}
      west_env: ${{ steps.generate_envs.outputs.west_env }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: us-east-1
          mask-aws-account-id: true
      - name: Grab Zip
        run: |
          aws --region us-east-1 lambda get-layer-version-by-arn --arn arn:aws:lambda:us-east-1:017000801446:layer:${{ matrix.layer }}-${{ matrix.arch }}:${{ inputs.version }} --query 'Content.Location' | xargs curl -L -o ${{ matrix.layer }}_${{ matrix.arch }}.zip
      - name: Store Zip
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.layer }}_${{ matrix.arch }}.zip
          path: ${{ matrix.layer }}_${{ matrix.arch }}.zip
          retention-days: 1
          if-no-files-found: error
      - name: Generate Environments
        id: generate_envs
        run: |
          echo "east_env=GovCloud ${{ inputs.environment }} (East)" >> $GITHUB_OUTPUT
          echo "west_env=GovCloud ${{ inputs.environment }} (West)" >> $GITHUB_OUTPUT

  # copy_east:
  #   name: Copy (East)
  #   needs: stash
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #     contents: read
  #   strategy:
  #     matrix:
  #       layer:
  #         - AWSLambdaPowertoolsPythonV3-python38
  #         - AWSLambdaPowertoolsPythonV3-python39
  #         - AWSLambdaPowertoolsPythonV3-python310
  #         - AWSLambdaPowertoolsPythonV3-python311
  #         - AWSLambdaPowertoolsPythonV3-python312
  #       arch:
  #         - arm64
  #         - x86
  #   environment: GovCloud ${{ inputs.environment }} (West)
  #   steps:
  #     - name: Download Zip
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: ${{ matrix.layer }}_${{ matrix.arch }}.zip
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
  #       with:
  #         role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
  #         aws-region: us-gov-east-1
  #         mask-aws-account-id: true
  #     - name: Create Layer
  #       run: |
  #         aws --region us-gov-east-1 lambda publish-layer-version \
  #           --layer-name ${{ inputs.environment }}-${{ matrix.layer }}-${{ matrix.arch }} \
  #           --zip-file fileb://./${{ matrix.layer }}_${{ matrix.arch }}.zip \
  #           --query 'Version' | \
  #           xargs aws --region us-gov-east-1 lambda add-layer-version-permission \
  #             --layer-name ${{ inputs.environment }}-${{ matrix.layer }}-${{ matrix.arch }} \
  #             --statement-id 'PublicLayer' \
  #             --action lambda:GetLayerVersion \
  #             --principal '*' \
  #             --version-number 

  copy_west:
    name: Copy (West)
    needs: stash
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        layer:
          - AWSLambdaPowertoolsPythonV3-python38
          - AWSLambdaPowertoolsPythonV3-python39
          - AWSLambdaPowertoolsPythonV3-python310
          - AWSLambdaPowertoolsPythonV3-python311
          - AWSLambdaPowertoolsPythonV3-python312
        arch:
          - arm64
          - x86
    environment:
      #name: ${{ needs.stash.generate_envs. }}
      name: GovCloud ${{ inputs.environment }} (West)
    steps:
      - name: Download Zip
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.layer }}_${{ matrix.arch }}.zip
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: us-gov-west-1
          mask-aws-account-id: true
      - name: Create Layer
        run: |
          aws --region us-gov-west-1 lambda publish-layer-version \
            --layer-name ${{ inputs.environment }}-${{ matrix.layer }}-${{ matrix.arch }} \
            --zip-file fileb://./${{ matrix.layer }}_${{ matrix.arch }}.zip \
            --query 'Version' | \
            xargs aws --region us-gov-west-1 lambda add-layer-version-permission \
              --layer-name ${{ inputs.environment }}-${{ matrix.layer }}-${{ matrix.arch }} \
              --statement-id 'PublicLayer' \
              --action lambda:GetLayerVersion \
              --principal '*' \
              --version-number 